Prism.languages.tl = {
	'function-name': {
		pattern: /\b[a-z]\w*(?:\.[a-z]\w*)*(?=#)/,
		alias: 'function'
	},
	'id-hash': {
		pattern: /#[0-9a-f]{8}\b/i,
		alias: 'char'
	},
	'key-value': {
		pattern: /\b[a-z_]\w*:[^ \t\n]+/i,
		inside: {
			'key': {
				pattern: /^[a-z_]\w*/i,
				alias: 'entity'
			},
			'punctuation': /:/,
			'value-literal': {
				pattern: /\b(true|false|\d+|".*?")\b/i,
				alias: 'string'
			},
			'value-type': {
				pattern: /\b[A-Z][A-Za-z_]*(?:<[^>]+>)?|\b[a-z_]\w*(?:<[^>]+>)?/,
				alias: 'property'
			}
		}
	},
	'flag': {
		pattern: /\bflags\.\d+\?\w+/,
		inside: {
			'flag-name': {
				pattern: /^flags\.\d+/,
				alias: 'symbol'
			},
			'punctuation': /\?/,
			'flag-value': {
				pattern: /\b(true|false)\b/i,
				alias: 'boolean'
			}
		}
	},
	'return-type': {
		pattern: /=\s*[A-Za-z_]\w*(?:<[^>]+>)?(?=;)/,
		inside: {
			'operator': /=/,
			'return-name': {
				pattern: /[A-Za-z_]\w*(?:<[^>]+>)?/,
				alias: 'important'
			}
		}
	},
	'boolean': /\b(true|false)\b/i,
	'number': /\b\d+\b/,
	'string': /"(?:\\.|[^"\\])*"/,
	'punctuation': /[.:?#=<>()<>;]/
};